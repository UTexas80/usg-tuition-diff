na.locf(., 9) %>%                                                                       # fill values from rows above - https://tinyurl.com/y7cfg64v
select_all(~gsub(".x", "", .)) %>%                                                      # modify Column Name if equal to DEGREE.MAJOR.x then change to DEGREE.MAJOR
left_join(., fy17_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy18_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy19_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
replace(., is.na(.), "") %>%
select(., -(9:10),13)
tuition.rpt <- inner_join(FY16.rpt, jctTbl.degree, by = "TYPE") %>%
mutate_at(.vars = vars(1:8), .funs = funs(ifelse(is.na(.), "", .))) %>%                 # remove na's so they don't propagate the other columns
na.locf(., 9) %>%                                                                       # fill values from rows above - https://tinyurl.com/y7cfg64v
select_all(~gsub(".x", "", .)) %>%                                                      # modify Column Name if equal to DEGREE.MAJOR.x then change to DEGREE.MAJOR
left_join(., fy17_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy18_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy19_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
replace(., is.na(.), "") %>%
select(., -(9:10),13)
source('~/GitHub/usg-tuition-diff/usg-tuition-diff.r', echo=TRUE)
source('~/GitHub/usg-tuition-diff/usg-tuition-diff.r', echo=TRUE)
tuition.rptA<-tuition.rpt
t<-tuition.rptA
t[grepl("FY 2")]
t[grepl("FY 2"), column]
t[grepl("FY 2"), "FY.2017"]
t[grepl("FY 2"), FY.2017]
t[grepl("FY 2"), column_to_rownames()]
t[grepl("FY 2"), "column"]
glimpse(t)
t[grepl("FY 2"), "FY.2018"]
t[grepl("FY 2"), FY.2018])
t[grepl("FY 2"), FY.2018]
t %>%  select(starts_with("FY")) %>%
filter_all(all_vars(grepl("FY"),. ))
t %>%  select(starts_with("FY"))
t %>%  select(starts_with("FY")) %>%         filter_all(all_vars(grepl("FY 2"),. ))
t %>%  select(starts_with("FY")) %>%         filter_all(all_vars(grepl("FY 2"),. )
t %>%  select(starts_with("FY")) %>%         filter_all(all_vars(grepl("FY 2"),. )))
t %>%  select(starts_with("FY")) %>%         filter_all(all_vars(grepl("FY 2"),. ))
t %>%  select(starts_with("FY")) %>%
filter_all(., all_vars(grepl("FY"), .))
t <-  select(starts_with("FY")) %>%
filter_all( all_vars(grepl("FY"), .))
t %<%  select(starts_with("FY"))
t %>%  select(starts_with("FY"))
t<- mutate_each(t, funs(ifelse(grepl("FY 2", " ", .)))
t
t<- mutate_each(t, funs(ifelse(grepl("FY 2"), " ", .)))
t<- mutate_at(t, funs(ifelse(grepl("FY 2"), " ", .)))
t %>%  select(starts_with("FY")) %>%
filter_all(., all_vars(grepl("FY"), .))
t %>%  select(starts_with("FY")) %>%
filter_all(all_vars(grepl("FY"), .))
t %>%  select(starts_with("FY")) %>%
filter_all(all_vars(grepl("FY"), ))
t %>%  select(starts_with("FY")) %>%
filter_all(all_vars(grepl("FY") ))
t %>%  select(starts_with("FY"))
t %>%  filter_at(., vars(starts_with("FY")), any_vars((. %% 2) == 0))
t %>%  filter_at(t, vars(starts_with("FY")), any_vars((. %% 2) == 0))
t %>%  filter_at(t, vars(starts_with("FY")) %>% any_vars((. %% 2) == 0))
t %>%  filter_at(., vars(starts_with("FY 2"))
t %>%  select(starts_with("FY"))
t %>%  select(starts_with("FY"))
t %>%  select(starts_with("FY 2"))
t %>%  select(starts_with("FY.2"))
df %>% filter(!str_detect(t, "^1"))
df %>% filter(str_detect(t, "^FY"))
t %>% filter(str_detect(t, "^FY"))
tr<-tuition.rpt
tr <-       mutate_at(., .funs = funs(ifelse(grepl('FY',.), "", .)))
tr <-       mutate_at(.vars, .funs = funs(ifelse(grepl('FY',.), "", .)))
tr <-       mutate_at(.vars = vars(.), .funs = funs(ifelse(grepl('FY',.), "", .)))
tr <-       mutate_at(.vars = vars(1:11), .funs = funs(ifelse(grepl('FY',.), "", .)))
View(tr)
tr <- mutate_at(., vars(.), funs(ifelse(. == 'FY 2013', " ", .)))
tr <- mutate_at(., vars(1:11), funs(ifelse(. == 'FY 2013', " ", .)))
df %>%  select(starts_with("FY.2")) %>%
filter_all(., all_vars(grepl("FY"), .))
df %>%  select(starts_with("FY.2"))
t %>%  select(starts_with("FY.2"))
t %>%  select(starts_with("FY.2")) %>% filter_all(., any_vars(. > 150))
View(jctTbl.source)
View(tuition.rpt)
t %>%  select(starts_with("FY.2")) %>% filter_all(., any_vars(. (grepl("FY")))
t %>%  select(starts_with("FY.2")) %>% filter_all(., any_vars(. gsub("FY 2", " ",.))
t %>%  select(starts_with("FY.2")) %>% filter_all(., any_vars(. gsub("FY 2", " ",.)))
t %>%  select(starts_with("FY.2")) %>% filter_all(., any_vars(., gsub("FY 2", " ",.)))
t %>%  select(starts_with("FY.2")) %>% filter_all(., any_vars(., gsub("FY 2", " ",.))
t %>%  select(starts_with("FY.2")) %>% filter_all(gsub("FY 2", " ",.))
t %>%  select(starts_with("FY.2")) %>% filter_all(gsub("FY 2", " ",.)))
t %>%  select(starts_with("FY.2")) %>% filter_all(gsub("FY 2", " ",.))
t %>%  select(starts_with("FY.2")) %>% filter_all(all_vars(gsub("FY 2", " ",.)))
t %>%  select(starts_with("FY.2")) %>% filter_all(all_vars(gsub("FY 2", "",.)))
t %>%  select(starts_with("FY.2")) %>% filter_all(all_vars(gsub("FY 2", "")))
t %>%  select(starts_with("FY.2")) %>% filter_all(all_vars(gsub("FY 2", ""),.))
t %>%  select(starts_with("FY.2")) %>% filter("FY 2"))
t %>%  select(starts_with("FY.2")) %>% filter("FY 2")
t %>%  select(starts_with("FY.2")) %>% filter_all(gsub("FY 2", " ",.))
t %>%  mutate_at(vars(matches("FY")), "log")
t %>%  mutate_at(vars(matches("FY")), "")
t %>%   mutate_at(.vars = vars(3:8), .funs = funs(ifelse(grepl("FY 2"), "", .))
t %>%   mutate_at(.vars = vars(3:8), .funs = funs(ifelse(grepl("FY 2"), "", .)))
t %>%   mutate_at(.vars = vars(3:8), .funs = funs(ifelse("FY 2013", "", .)))
t %>%   mutate_at(.vars = vars(3:8), .funs = funs(ifelse("FY 2014", "", .)))
t %>%   mutate_at(.vars = vars(3:8), .funs = funs(ifelse("FY 2015", "", .)))
View(t)
t %>%  filter_at(vars(contains("FY 2")
t %>%  filter_at(vars(contains("FY 2"))
t %>%  filter_at(vars(contains("FY 2"))
t %>%
filter_at(vars(contains("FY 2013")),
t %>%
filter_at(vars(contains("FY 2013"))
View(t)
View(t)
t %>% filter_at(vars(contains("FY 2013"))
t <- filter_at(t, vars(c(contains("2013"))
t %>% filter_at(.,vars(contains("FY 2013"))
View(tr)
tr%>%filter_at(vars(contains("FY")), all_vars(.>5))
tr%>%filter_at(vars(contains("FY 2")), all_vars(.>5))
tr%>%filter_at(vars(contains("FY 2")), all_vars(.>88888))
tr%>%filter_at(vars(contains("FY 2")), all_vars(.>8888))
tr%>%filter_at(vars(contains("FY 2")), all_vars(.>888))
tr%>%filter_at(vars(contains("FY 2")), all_vars(.>88))
tr%>%filter_at(vars(contains("FY 2")), any_vars(.>88))
tr%>%filter_at(vars(contains("FY 2")), any_vars(.>8))
tr%>%filter_at(vars(contains("FY 2")), any_vars(.>4))
tr%>%filter_at(vars(contains("FY")), all_vars(.>5))
tr%>%filter_at(vars(contains("FY")), all_vars(.>6))
tr%>%filter_at(vars(contains("FY")), all_vars(.>69))
tr%>%filter_at(vars(contains("FY")), any_vars(vars(contains("FY ")))
tr%>%filter_at(vars(contains("FY")), any_vars(vars(contains("FY "))
tr%>%filter_at(vars(contains("FY")), any_vars(vars(contains("F"))))
tr%>%filter_at(vars(contains("FY")), any_vars(. contains("FY")))
tr%>%filter_at(vars(contains("FY")), all_vars(.contains("FY"))
tr%>%filter_at(vars(contains("FY")), any_vars(.contains("FY"))
tr%>%filter_at(vars(contains("FY")), all_vars(.>69))
tr%>%filter_at(vars(contains("FY")), any_vars(.>69))
tr%>%filter_at(vars(contains("FY")), any_vars(contains("FY")))
tr%>%filter_at(vars(contains("FY")), any_vars(. contains("FY")))
tr%>%filter_at(vars(contains("FY")), any_vars(.>69))
tr%>%filter_at(vars(contains("FY")), any_vars(.contains(69))
tr%>%filter_at(vars(contains("FY")), any_vars(.contains("69"))
tr%>%filter_at(vars(contains("FY")), any_vars(.<69))
tr%>%filter_at(vars(contains("FY")), any_vars(is.character()))
tr%>%filter_at(vars(contains("FY")), any_vars(is.character))
tr%>%filter_at(vars(contains("FY")), any_vars(.<69))
tr %>% filter_all(all_vars(!grepl('FY 2',.)))
View(tr)
View(tr)
tr %>% filter_all(all_vars(!grepl('FY 2013',.)))
tr<- tr %>% filter_all(all_vars(!grepl('FY 2',.)))
View(tr)
View(tr)
tr<- mutate_at(.vars = vars(3:8), .funs = funs(ifelse(contains("FY 2"), "", .)))
tr<- mutate_at(.vars = vars(3:8), .funs = funs(ifelse(grepl("FY 2"), "", .)))
tr %>%
mutate(var = replace(var, var contains "FY 2", " "))
tr %>% mutate(var = replace(var, var contains "FY 2", " "))
tr<-mutate_each(all_vars(!grepl('FY 2',.)))
tr<-mutate_at(.vars = vars(3:8), .funs = funs(ifelse(contains("FY"), "", .))) %>%
tr<-mutate_at(.vars = vars(3:8), .funs = funs(ifelse(grepl('^AB',.), "", .))) %>%
tr<-mutate_at(.vars = vars(3:8), .funs = funs(ifelse(grepl('^FY',.), "", .))) %>%
tr<-mutate_at(.vars = vars(3:8), .funs = funs(ifelse(grepl('^FY',.), "", .)))
t %>%   mutate_at(.vars = vars(3:8), .funs = funs(ifelse(grepl("FY 2"), "", .)))
t %>%   mutate_at(.vars = vars(3:8), .funs = funs(ifelse(grepl("FY 2", .), "", .)))
View(t)
View(t)
t %>%   mutate_at(.vars = vars(3:8), .funs = funs(ifelse(grepl("^FY 20", .), " ", .)))
t <- mutate_at(.vars = vars(3:8), .funs = funs(ifelse(grepl("^FY 20", .), " ", .)))
t <- mutate_at(.vars = vars(3:8), .funs = funs(ifelse(grepl("^FY 20", .), " ", .)))
t<- t %>%   mutate_at(.vars = vars(3:8), .funs = funs(ifelse(grepl("^FY 20", .), " ", .)))
View(t)
source('~/GitHub/usg-tuition-diff/usg-tuition-diff.r', echo=TRUE)
source('~/GitHub/usg-tuition-diff/usg-tuition-diff.r', echo=TRUE)
traceback()
fy18_long <-gather(FY18, category, FY.2018, -TYPE) %>% arrange(TYPE) %>%
left_join(., jctTbl.indebtedness, by = 'category') %>%                                  # Use index to reference a column https://tinyurl.com/y7nra5h2
mutate(b = ifelse(is.na(DEGREE.MAJOR),.[[2]] , DEGREE.MAJOR))
fy18_long
rm(list = ls()[grepl("(SQL|Sheet|Export|X2016Tuition)", ls())])
# Preprocessing script.  Remove worksheets programmatically.  Delete
# objects with 'SQL' and 'Sheet' in name
degree.tbl[, `:=`(ID, .I)]
# FY16.rpt[, `:=`(ID, .I)]
FY17 <- FY17TuitionDiff.X2016TuitionDiffIndebtedness
FY17$FY.2017 <- as.character(FY17$FY.2017)
FY18 <- FY18TuitionDiff.Export.Worksheet
FY19 <- FY19TuitionDiff.Export.Worksheet
names(FY17Tuition.Source)[2] <- "TYPE"                                                              # rename columns to sync joins
names(FY18Tuition.Source)[2] <- "TYPE"                                                              # rename columns to sync joins
names(FY18Tuition.Source)[4] <- "FY.2018"                                                           # rename columns to sync joins
# fy17_long <- gather(FY17, category, FY.2017, -DEGREE.MAJOR) %>% arrange(DEGREE.MAJOR)
fy18_long <-gather(FY18, category, FY.2018, -TYPE) %>% arrange(TYPE) %>%
left_join(., jctTbl.indebtedness, by = 'category') %>%                                  # Use index to reference a column https://tinyurl.com/y7nra5h2
mutate(b = ifelse(is.na(DEGREE.MAJOR),.[[2]] , DEGREE.MAJOR))                           # take the value in column 2 in there is a  na in column 3, i.e. DEGREE.MAJOR  https://tinyurl.com/yck2bdje
fy19_long <-gather(FY19, category, FY.2019, -TYPE) %>% arrange(TYPE) %>%
left_join(., jctTbl.indebtedness, by = 'category')                                      # Use index to reference a column https://tinyurl.com/y7nra5h2
# remove unnecessary worksheets
rm(list = ls()[grepl("(SQL|Sheet|Export|X2016Tuition)", ls())])
FY17Tuition.Source <- left_join(FY17Tuition.Source, jctTbl.source, by = "DETAIL_CODE_DESC")%>%
select(5,4,2) %>%
select_all(~gsub("COUNT", "FY.2017", .)) %>%                                            # modify Column Name if equal to count then change to 'FY.2017'
mutate_at(c(2), as.character)                                                           # Change select columns from character to integers              https://tinyurl.com/ycyxzarn
fy17_long <- select(FY17, 1, 5) %>%
left_join(., jctTbl.degree, by = "DEGREE.MAJOR") %>%
mutate_at(.vars = vars(1:2), .funs = funs(ifelse(is.na(.), "", .))) %>%                 # remove na's so they don't propagate to the other columns in the next statement, i.e, na.locf(., 3) %>%
na.locf(., 3) %>%
bind_rows(., FY17Tuition.Source)
FY18Tuition.Source <- left_join(FY18Tuition.Source, jctTbl.source, by = "DETAIL_CODE_DESC")
fy18_long <-FY18Tuition.Source  %>%
select(2,5,4) %>%
bind_rows(., fy18_long) %>%
select(2,1,3)
tuition.rpt <- inner_join(FY16.rpt, jctTbl.degree, by = "TYPE") %>%
mutate_at(.vars = vars(1:8), .funs = funs(ifelse(is.na(.), "", .))) %>%                 # remove na's so they don't propagate the other columns
na.locf(., 9) %>%                                                                       # fill values from rows above - https://tinyurl.com/y7cfg64v
select_all(~gsub(".x", "", .)) %>%                                                      # modify Column Name if equal to DEGREE.MAJOR.x then change to DEGREE.MAJOR
left_join(., fy17_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy18_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy19_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
replace(., is.na(.), "") %>%
select(., -(9:10), -13)                                                                 # exclude columns 9,10 & 13             https://tinyurl.com/y8m5llmo
mutate(b = ifelse(is.na(DEGREE.MAJOR),.[[2]] , DEGREE.MAJOR)) %>%                       # take the value in column 2 in there is a  na in column 3, i.e. DEGREE.MAJOR  https://tinyurl.com/yck2bdje
mutate_at(.vars = vars(3:8), .funs = funs(ifelse(grepl("^FY 20", .), " ", .)))
tuition.rpt <- inner_join(FY16.rpt, jctTbl.degree, by = "TYPE") %>%
mutate_at(.vars = vars(1:8), .funs = funs(ifelse(is.na(.), "", .))) %>%                 # remove na's so they don't propagate the other columns
na.locf(., 9) %>%                                                                       # fill values from rows above - https://tinyurl.com/y7cfg64v
select_all(~gsub(".x", "", .)) %>%                                                      # modify Column Name if equal to DEGREE.MAJOR.x then change to DEGREE.MAJOR
left_join(., fy17_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy18_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy19_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
replace(., is.na(.), "") %>%
select(., -(9:10), -13)                                                                 # exclude columns 9,10 & 13             https://tinyurl.com/y8m5llmo
mutate(b = ifelse(is.na(DEGREE.MAJOR),.[[2]] , DEGREE.MAJOR))
tuition.rpt <- inner_join(FY16.rpt, jctTbl.degree, by = "TYPE") %>%
mutate_at(.vars = vars(1:8), .funs = funs(ifelse(is.na(.), "", .))) %>%                 # remove na's so they don't propagate the other columns
na.locf(., 9) %>%                                                                       # fill values from rows above - https://tinyurl.com/y7cfg64v
select_all(~gsub(".x", "", .)) %>%                                                      # modify Column Name if equal to DEGREE.MAJOR.x then change to DEGREE.MAJOR
left_join(., fy17_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy18_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy19_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
replace(., is.na(.), "") %>%
select(., -(9:10), -13)
View(tuition.rpt)
tuition.rpt<- mutate(b = ifelse(is.na(DEGREE.MAJOR),.[[2]] , DEGREE.MAJOR))
tuition.rpt <- inner_join(FY16.rpt, jctTbl.degree, by = "TYPE") %>%
mutate_at(.vars = vars(1:8), .funs = funs(ifelse(is.na(.), "", .))) %>%                 # remove na's so they don't propagate the other columns
na.locf(., 9) %>%                                                                       # fill values from rows above - https://tinyurl.com/y7cfg64v
select_all(~gsub(".x", "", .)) %>%                                                      # modify Column Name if equal to DEGREE.MAJOR.x then change to DEGREE.MAJOR
left_join(., fy17_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy18_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy19_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
replace(., is.na(.), "") %>%
select(., -(9:10), -13)                                                                 # exclude columns 9,10 & 13             https://tinyurl.com/y8m5llmo
mutate(b = ifelse(is.na(DEGREE.MAJOR),.[[2]] , DEGREE.MAJOR)) %>%                       # take the value in column 2 in there is a  na in column 3, i.e. DEGREE.MAJOR  https://tinyurl.com/yck2bdje
filter_all(all_vars(!grepl('FY 2',.)))
tuition.rpt <- inner_join(FY16.rpt, jctTbl.degree, by = "TYPE") %>%
mutate_at(.vars = vars(1:8), .funs = funs(ifelse(is.na(.), "", .))) %>%                 # remove na's so they don't propagate the other columns
na.locf(., 9) %>%                                                                       # fill values from rows above - https://tinyurl.com/y7cfg64v
select_all(~gsub(".x", "", .)) %>%                                                      # modify Column Name if equal to DEGREE.MAJOR.x then change to DEGREE.MAJOR
left_join(., fy17_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy18_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy19_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
replace(., is.na(.), "") %>%
select(., -(9:10), -13)                                                                 # exclude columns 9,10 & 13             https://tinyurl.com/y8m5llmo
mutate(b = ifelse(is.na(DEGREE.MAJOR),.[[2]] , DEGREE.MAJOR))
source('~/GitHub/usg-tuition-diff/usg-tuition-diff.r', echo=TRUE)
source('~/GitHub/usg-tuition-diff/usg-tuition-diff.r', echo=TRUE)
source('~/GitHub/usg-tuition-diff/usg-tuition-diff.r', echo=TRUE)
source('~/GitHub/usg-tuition-diff/usg-tuition-diff.r', echo=TRUE)
tuition.rpt <- inner_join(FY16.rpt, jctTbl.degree, by = "TYPE") %>%
mutate_at(.vars = vars(1:8), .funs = funs(ifelse(is.na(.), "", .))) %>%                 # remove na's so they don't propagate the other columns
na.locf(., 9) %>%                                                                       # fill values from rows above -                                                 https://tinyurl.com/y7cfg64v
select_all(~gsub(".x", "", .)) %>%                                                      # modify Column Name if equal to DEGREE.MAJOR.x then change to DEGREE.MAJOR
left_join(., fy17_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy18_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy19_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
replace(., is.na(.), "")
View(tuition.rpt)
write.xlsx(tuition.rpt, "reports/tuitionA.xlsx", row.names = F, sheetName = "rpt",
append = FALSE)
tuition.rpt <- inner_join(FY16.rpt, jctTbl.degree, by = "TYPE") %>%
mutate_at(.vars = vars(1:8), .funs = funs(ifelse(is.na(.), "", .))) %>%                 # remove na's so they don't propagate the other columns
na.locf(., 9) %>%                                                                       # fill values from rows above -                                                 https://tinyurl.com/y7cfg64v
select_all(~gsub(".x", "", .)) %>%                                                      # modify Column Name if equal to DEGREE.MAJOR.x then change to DEGREE.MAJOR
left_join(., fy17_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy18_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy19_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
replace(., is.na(.), "") %>%
select(., -(3:4, 7:10), -13)
tuition.rpt <- inner_join(FY16.rpt, jctTbl.degree, by = "TYPE") %>%
mutate_at(.vars = vars(1:8), .funs = funs(ifelse(is.na(.), "", .))) %>%                 # remove na's so they don't propagate the other columns
na.locf(., 9) %>%                                                                       # fill values from rows above -                                                 https://tinyurl.com/y7cfg64v
select_all(~gsub(".x", "", .)) %>%                                                      # modify Column Name if equal to DEGREE.MAJOR.x then change to DEGREE.MAJOR
left_join(., fy17_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy18_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy19_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
replace(., is.na(.), "") %>%
select(., -(3:4), (7:10), -13)
tuition.rpt <- inner_join(FY16.rpt, jctTbl.degree, by = "TYPE") %>%
mutate_at(.vars = vars(1:8), .funs = funs(ifelse(is.na(.), "", .))) %>%                 # remove na's so they don't propagate the other columns
na.locf(., 9) %>%                                                                       # fill values from rows above -                                                 https://tinyurl.com/y7cfg64v
select_all(~gsub(".x", "", .)) %>%                                                      # modify Column Name if equal to DEGREE.MAJOR.x then change to DEGREE.MAJOR
left_join(., fy17_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy18_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy19_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
replace(., is.na(.), "") %>%
select(., -(3:4), -(7:10), -13)
tuition.rpt <- inner_join(FY16.rpt, jctTbl.degree, by = "TYPE") %>%
mutate_at(.vars = vars(1:8), .funs = funs(ifelse(is.na(.), "", .))) %>%                 # remove na's so they don't propagate the other columns
na.locf(., 9) %>%                                                                       # fill values from rows above -                                                 https://tinyurl.com/y7cfg64v
select_all(~gsub(".x", "", .)) %>%                                                      # modify Column Name if equal to DEGREE.MAJOR.x then change to DEGREE.MAJOR
left_join(., fy17_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy18_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy19_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
replace(., is.na(.), "") %>%
select(., -(3:4), -(7:10), -13)  %>%                                                            # exclude columns 9,10 & 13                                                     https://tinyurl.com/y8m5llmo
mutate(b = ifelse(is.na(DEGREE.MAJOR),.[[2]] , DEGREE.MAJOR))
tuition.rpt <- inner_join(FY16.rpt, jctTbl.degree, by = "TYPE") %>%
mutate_at(.vars = vars(1:8), .funs = funs(ifelse(is.na(.), "", .))) %>%                 # remove na's so they don't propagate the other columns
na.locf(., 9) %>%                                                                       # fill values from rows above -                                                 https://tinyurl.com/y7cfg64v
select_all(~gsub(".x", "", .)) %>%                                                      # modify Column Name if equal to DEGREE.MAJOR.x then change to DEGREE.MAJOR
left_join(., fy17_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy18_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy19_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
replace(., is.na(.), "") %>%
select(., -(3:4), -(7:10), -13)  %>%                                                    # exclude columns 9,10 & 13                                                     https://tinyurl.com/y8m5llmo
#           mutate(b = ifelse(is.na(DEGREE.MAJOR),.[[2]] , DEGREE.MAJOR)) %>%                       # take the value in column 2 in there is a  na in column 3, i.e. DEGREE.MAJOR   https://tinyurl.com/yck2bdje
mutate_at(.vars = vars(3:7), .funs = funs(ifelse(grepl("^FY 20", .), " ", .)))
View(jctTbl.indebtedness)
View(jctTbl.source)
source('~/GitHub/usg-tuition-diff/usg-tuition-diff.r', echo=TRUE)
source('~/GitHub/usg-tuition-diff/usg-tuition-diff.r', echo=TRUE)
'FY19Tuition.Source
source('~/GitHub/usg-tuition-diff/usg-tuition-diff.r', echo=TRUE)
View(FY19Tuition.Source)
View(FY19Tuition.Source)
source('~/GitHub/usg-tuition-diff/usg-tuition-diff.r', echo=TRUE)
View(FY19Tuition.Source)
fy19_long <-FY19Tuition.Source  %>%
select(2,5,4) %>%
bind_rows(., fy19_long) %>%
select(2,1,3)
View(fy19_long)
tuition.rpt <- inner_join(FY16.rpt, jctTbl.degree, by = "TYPE") %>%
mutate_at(.vars = vars(1:8), .funs = funs(ifelse(is.na(.), "", .))) %>%                 # remove na's so they don't propagate the other columns
na.locf(., 9) %>%                                                                       # fill values from rows above -                                                 https://tinyurl.com/y7cfg64v
select_all(~gsub(".x", "", .)) %>%                                                      # modify Column Name if equal to DEGREE.MAJOR.x then change to DEGREE.MAJOR
left_join(., fy17_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy18_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy19_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
replace(., is.na(.), "") %>%
select(., -(3:4), -(7:10), -13)
tuition.rpt <- inner_join(FY16.rpt, jctTbl.degree, by = "TYPE") %>%
mutate_at(.vars = vars(1:8), .funs = funs(ifelse(is.na(.), "", .))) %>%                 # remove na's so they don't propagate the other columns
na.locf(., 9) %>%                                                                       # fill values from rows above -                                                 https://tinyurl.com/y7cfg64v
select_all(~gsub(".x", "", .)) %>%                                                      # modify Column Name if equal to DEGREE.MAJOR.x then change to DEGREE.MAJOR
left_join(., fy17_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy18_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy19_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
replace(., is.na(.), "") %>%
select(., -(3:4), -(7:10), -13)  %>%                                                    # exclude columns 9,10 & 13                                                     https://tinyurl.com/y8m5llmo
#           mutate(b = ifelse(is.na(DEGREE.MAJOR),.[[2]] , DEGREE.MAJOR)) %>%                       # take the value in column 2 in there is a  na in column 3, i.e. DEGREE.MAJOR   https://tinyurl.com/yck2bdje
mutate_at(.vars = vars(3:7), .funs = funs(ifelse(grepl("^FY 20", .), " ", .)))
tuition.rpt <- inner_join(FY16.rpt, jctTbl.degree, by = "TYPE") %>%
mutate_at(.vars = vars(1:8), .funs = funs(ifelse(is.na(.), "", .))) %>%                 # remove na's so they don't propagate the other columns
na.locf(., 9) %>%                                                                       # fill values from rows above -                                                 https://tinyurl.com/y7cfg64v
select_all(~gsub(".x", "", .)) %>%                                                      # modify Column Name if equal to DEGREE.MAJOR.x then change to DEGREE.MAJOR
left_join(., fy17_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy18_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy19_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
replace(., is.na(.), "") %>%
select(., -(3:4), -(7:10), -13)  %>%
View(tuition.rpt)
tuition.rpt <- inner_join(FY16.rpt, jctTbl.degree, by = "TYPE") %>%
mutate_at(.vars = vars(1:8), .funs = funs(ifelse(is.na(.), "", .))) %>%                 # remove na's so they don't propagate the other columns
na.locf(., 9) %>%                                                                       # fill values from rows above -                                                 https://tinyurl.com/y7cfg64v
select_all(~gsub(".x", "", .)) %>%                                                      # modify Column Name if equal to DEGREE.MAJOR.x then change to DEGREE.MAJOR
left_join(., fy17_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy18_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy19_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
replace(., is.na(.), "") %>%
select(., -(3:4), -(7:10), -13)
View(tuition.rpt)
source('~/GitHub/usg-tuition-diff/usg-tuition-diff.r', echo=TRUE)
tuition.rpt <- inner_join(FY16.rpt, jctTbl.degree, by = "TYPE") %>%
mutate_at(.vars = vars(1:8), .funs = funs(ifelse(is.na(.), "", .))) %>%                 # remove na's so they don't propagate the other columns
na.locf(., 9) %>%                                                                       # fill values from rows above -                                                 https://tinyurl.com/y7cfg64v
select_all(~gsub(".x", "", .)) %>%                                                      # modify Column Name if equal to DEGREE.MAJOR.x then change to DEGREE.MAJOR
left_join(., fy17_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy18_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy19_long, by = c("DEGREE.MAJOR", "TYPE"))
View(tuition.rpt)
source('~/GitHub/usg-tuition-diff/usg-tuition-diff.r', echo=TRUE)
View(tuition.rpt)
source('~/GitHub/usg-tuition-diff/usg-tuition-diff.r', echo=TRUE)
tuition.rpt <- inner_join(FY16.rpt, jctTbl.degree, by = "TYPE") %>%
mutate_at(.vars = vars(1:8), .funs = funs(ifelse(is.na(.), "", .))) %>%                 # remove na's so they don't propagate the other columns
na.locf(., 9) %>%                                                                       # fill values from rows above -                                                 https://tinyurl.com/y7cfg64v
select_all(~gsub(".x", "", .)) %>%                                                      # modify Column Name if equal to DEGREE.MAJOR.x then change to DEGREE.MAJOR
left_join(., fy17_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy18_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy19_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
replace(., is.na(.), "") %>%
select(., -1, -(3:4), -(7:10))  %>%                                                     # exclude columns 1,3,4,7 & 10                                                  https://tinyurl.com/y8m5llmo
#           mutate(b = ifelse(is.na(DEGREE.MAJOR),.[[2]] , DEGREE.MAJOR)) %>%                       # take the value in column 2 in there is a  na in column 3, i.e. DEGREE.MAJOR   https://tinyurl.com/yck2bdje
mutate_at(.vars = vars(2:5), .funs = funs(ifelse(grepl("^FY 20", .), " ", .)))  %>%     # replace values in rows that match "^FY 20" with blanks " "                    https://tinyurl.com/y9xhh7nz
mutate(FY.2020 = as.numeric(.[[6]])*1.05)
View(tuition.rpt)
source('~/GitHub/usg-tuition-diff/usg-tuition-diff.r', echo=TRUE)
View(tuition.rpt)
tuition.rpt <- inner_join(FY16.rpt, jctTbl.degree, by = "TYPE") %>%
mutate_at(.vars = vars(1:8), .funs = funs(ifelse(is.na(.), "", .))) %>%                 # remove na's so they don't propagate the other columns
na.locf(., 9) %>%                                                                       # fill values from rows above -                                                 https://tinyurl.com/y7cfg64v
select_all(~gsub(".x", "", .)) %>%                                                      # modify Column Name if equal to DEGREE.MAJOR.x then change to DEGREE.MAJOR
left_join(., fy17_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy18_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy19_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
replace(., is.na(.), "") %>%
select(., -1, -(3:4), -(7:10))  %>%                                                     # exclude columns 1,3,4,7 & 10                                                  https://tinyurl.com/y8m5llmo
#           mutate(b = ifelse(is.na(DEGREE.MAJOR),.[[2]] , DEGREE.MAJOR)) %>%                       # take the value in column 2 in there is a  na in column 3, i.e. DEGREE.MAJOR   https://tinyurl.com/yck2bdje
mutate_at(.vars = vars(2:5), .funs = funs(ifelse(grepl("^FY 20", .), " ", .)))  %>%     # replace values in rows that match "^FY 20" with blanks " "                    https://tinyurl.com/y9xhh7nz
round(mutate(FY.2020 = as.integer(.[[6]])*1.05), digits=0)
tuition.rpt <- inner_join(FY16.rpt, jctTbl.degree, by = "TYPE") %>%
mutate_at(.vars = vars(1:8), .funs = funs(ifelse(is.na(.), "", .))) %>%                 # remove na's so they don't propagate the other columns
na.locf(., 9) %>%                                                                       # fill values from rows above -                                                 https://tinyurl.com/y7cfg64v
select_all(~gsub(".x", "", .)) %>%                                                      # modify Column Name if equal to DEGREE.MAJOR.x then change to DEGREE.MAJOR
left_join(., fy17_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy18_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy19_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
replace(., is.na(.), "") %>%
select(., -1, -(3:4), -(7:10))  %>%                                                     # exclude columns 1,3,4,7 & 10                                                  https://tinyurl.com/y8m5llmo
#           mutate(b = ifelse(is.na(DEGREE.MAJOR),.[[2]] , DEGREE.MAJOR)) %>%                       # take the value in column 2 in there is a  na in column 3, i.e. DEGREE.MAJOR   https://tinyurl.com/yck2bdje
mutate_at(.vars = vars(2:5), .funs = funs(ifelse(grepl("^FY 20", .), " ", .)))  %>%     # replace values in rows that match "^FY 20" with blanks " "                    https://tinyurl.com/y9xhh7nz
mutate(FY.2020 = as.integer(.[[6]])*1.05)
tuition.rpt <- inner_join(FY16.rpt, jctTbl.degree, by = "TYPE") %>%
mutate_at(.vars = vars(1:8), .funs = funs(ifelse(is.na(.), "", .))) %>%                 # remove na's so they don't propagate the other columns
na.locf(., 9) %>%                                                                       # fill values from rows above -                                                 https://tinyurl.com/y7cfg64v
select_all(~gsub(".x", "", .)) %>%                                                      # modify Column Name if equal to DEGREE.MAJOR.x then change to DEGREE.MAJOR
left_join(., fy17_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy18_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy19_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
replace(., is.na(.), "") %>%
select(., -1, -(3:4), -(7:10))  %>%                                                     # exclude columns 1,3,4,7 & 10                                                  https://tinyurl.com/y8m5llmo
#           mutate(b = ifelse(is.na(DEGREE.MAJOR),.[[2]] , DEGREE.MAJOR)) %>%                       # take the value in column 2 in there is a  na in column 3, i.e. DEGREE.MAJOR   https://tinyurl.com/yck2bdje
mutate_at(.vars = vars(2:5), .funs = funs(ifelse(grepl("^FY 20", .), " ", .)))  %>%     # replace values in rows that match "^FY 20" with blanks " "                    https://tinyurl.com/y9xhh7nz
mutate(FY.2020 = format(as.integer(.[[6]])*1.05),0)
View(tuition.rpt)
tuition.rpt <- inner_join(FY16.rpt, jctTbl.degree, by = "TYPE") %>%
mutate_at(.vars = vars(1:8), .funs = funs(ifelse(is.na(.), "", .))) %>%                 # remove na's so they don't propagate the other columns
na.locf(., 9) %>%                                                                       # fill values from rows above -                                                 https://tinyurl.com/y7cfg64v
select_all(~gsub(".x", "", .)) %>%                                                      # modify Column Name if equal to DEGREE.MAJOR.x then change to DEGREE.MAJOR
left_join(., fy17_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy18_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy19_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
replace(., is.na(.), "") %>%
select(., -1, -(3:4), -(7:10))  %>%                                                     # exclude columns 1,3,4,7 & 10                                                  https://tinyurl.com/y8m5llmo
#           mutate(b = ifelse(is.na(DEGREE.MAJOR),.[[2]] , DEGREE.MAJOR)) %>%                       # take the value in column 2 in there is a  na in column 3, i.e. DEGREE.MAJOR   https://tinyurl.com/yck2bdje
mutate_at(.vars = vars(2:5), .funs = funs(ifelse(grepl("^FY 20", .), " ", .)))  %>%     # replace values in rows that match "^FY 20" with blanks " "                    https://tinyurl.com/y9xhh7nz
mutate(FY.2020 = format(is.integer(.[[6]])*1.05),0)
tuition.rpt <- inner_join(FY16.rpt, jctTbl.degree, by = "TYPE") %>%
mutate_at(.vars = vars(1:8), .funs = funs(ifelse(is.na(.), "", .))) %>%                 # remove na's so they don't propagate the other columns
na.locf(., 9) %>%                                                                       # fill values from rows above -                                                 https://tinyurl.com/y7cfg64v
select_all(~gsub(".x", "", .)) %>%                                                      # modify Column Name if equal to DEGREE.MAJOR.x then change to DEGREE.MAJOR
left_join(., fy17_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy18_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy19_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
replace(., is.na(.), "") %>%
select(., -1, -(3:4), -(7:10))  %>%                                                     # exclude columns 1,3,4,7 & 10                                                  https://tinyurl.com/y8m5llmo
#           mutate(b = ifelse(is.na(DEGREE.MAJOR),.[[2]] , DEGREE.MAJOR)) %>%                       # take the value in column 2 in there is a  na in column 3, i.e. DEGREE.MAJOR   https://tinyurl.com/yck2bdje
mutate_at(.vars = vars(2:5), .funs = funs(ifelse(grepl("^FY 20", .), " ", .)))  %>%     # replace values in rows that match "^FY 20" with blanks " "                    https://tinyurl.com/y9xhh7nz
mutate(FY.2020 = is.integer(.[[6]])*1.05)
tuition.rpt <- inner_join(FY16.rpt, jctTbl.degree, by = "TYPE") %>%
mutate_at(.vars = vars(1:8), .funs = funs(ifelse(is.na(.), "", .))) %>%                 # remove na's so they don't propagate the other columns
na.locf(., 9) %>%                                                                       # fill values from rows above -                                                 https://tinyurl.com/y7cfg64v
select_all(~gsub(".x", "", .)) %>%                                                      # modify Column Name if equal to DEGREE.MAJOR.x then change to DEGREE.MAJOR
left_join(., fy17_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy18_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy19_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
replace(., is.na(.), "") %>%
select(., -1, -(3:4), -(7:10))  %>%                                                     # exclude columns 1,3,4,7 & 10                                                  https://tinyurl.com/y8m5llmo
#           mutate(b = ifelse(is.na(DEGREE.MAJOR),.[[2]] , DEGREE.MAJOR)) %>%                       # take the value in column 2 in there is a  na in column 3, i.e. DEGREE.MAJOR   https://tinyurl.com/yck2bdje
mutate_at(.vars = vars(2:5), .funs = funs(ifelse(grepl("^FY 20", .), " ", .)))  %>%     # replace values in rows that match "^FY 20" with blanks " "                    https://tinyurl.com/y9xhh7nz
mutate(FY.2020 = as.integer(.[[6]])*1.05)
tuition.rpt <- inner_join(FY16.rpt, jctTbl.degree, by = "TYPE") %>%
mutate_at(.vars = vars(1:8), .funs = funs(ifelse(is.na(.), "", .))) %>%                 # remove na's so they don't propagate the other columns
na.locf(., 9) %>%                                                                       # fill values from rows above -                                                 https://tinyurl.com/y7cfg64v
select_all(~gsub(".x", "", .)) %>%                                                      # modify Column Name if equal to DEGREE.MAJOR.x then change to DEGREE.MAJOR
left_join(., fy17_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy18_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
left_join(., fy19_long, by = c("DEGREE.MAJOR", "TYPE")) %>%
replace(., is.na(.), "") %>%
select(., -1, -(3:4), -(7:10))  %>%                                                     # exclude columns 1,3,4,7 & 10                                                  https://tinyurl.com/y8m5llmo
#           mutate(b = ifelse(is.na(DEGREE.MAJOR),.[[2]] , DEGREE.MAJOR)) %>%                       # take the value in column 2 in there is a  na in column 3, i.e. DEGREE.MAJOR   https://tinyurl.com/yck2bdje
mutate_at(.vars = vars(2:5), .funs = funs(ifelse(grepl("^FY 20", .), " ", .)))  %>%     # replace values in rows that match "^FY 20" with blanks " "                    https://tinyurl.com/y9xhh7nz
mutate(FY.2020 = round(as.integer(.[[6]])*1.05),0)
source('~/GitHub/usg-tuition-diff/usg-tuition-diff.r', echo=TRUE)
View(tuition.rpt)
tuition.rpt<-mutate_at(.vars = vars(7), .funs = funs(ifelse(is.na), " ", .)))
tuition.rpt<-mutate_at(.vars = vars(7), .funs = funs(ifelse(is.na), " ", .)))
tuition.rpt<-mutate_at(.vars = vars(7), .funs = funs(ifelse(is.na), " ", .))
tuition.rpt<-mutate_at([[[7]] = funs(ifelse(is.na), " ", .))
tuition.rpt<-mutate_at([[7]] = funs(ifelse(is.na), " ", .))
tuition.rpt<-mutate_at([7] = funs(ifelse(is.na), " ", .))
tuition.rpt<-mutate_at(FY2020.est = funs(ifelse(is.na), " ", .))
tuition.rpt<-mutate_at(vars(FY2020.est) = funs(ifelse(is.na), " ", .))
tuition.rpt<-mutate_at(vars(FY2020.est, funs(ifelse(is.na), " ", .))
tuition.rpt<- mutate_all(.funs = funs(ifelse(is.na(.), 0, .)))
tuition.rpt %>% mutate_all(.funs = funs(ifelse(is.na(.), 0, .)))
source('~/GitHub/usg-tuition-diff/usg-tuition-diff.r', echo=TRUE)
View(tuition.rpt)
